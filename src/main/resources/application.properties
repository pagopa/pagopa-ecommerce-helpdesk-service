# Info
application.name=${name}
build.version=${version}
# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoints.jmx.exposure.include=health,info
management.info.env.enabled=true
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
# Server
server.port=8080
# Logging
logging.level.root=\${DEFAULT_LOGGING_LEVEL:INFO}
logging.level.it.pagopa=\${APP_LOGGING_LEVEL:INFO}
logging.level.web=\${WEB_LOGGING_LEVEL:info}
# disable null values serialization
spring.jackson.default-property-inclusion=NON_NULL
#PM Oracle database configuration
pm.oracle.host=\${PM_ORACLE_HOST}
pm.oracle.port=\${PM_ORACLE_PORT}
pm.oracle.databaseName=\${PM_ORACLE_DATABASE_NAME}
pm.oracle.userName=\${PM_ORACLE_USERNAME}
pm.oracle.password=\${PM_ORACLE_PASSWORD}

#Ecommerce mongo database configuration
#spring.data.mongodb.uri=mongodb://\${MONGO_USERNAME}:\${MONGO_PASSWORD}@\${MONGO_HOST}:\${MONGO_PORT}/?ssl=\${MONGO_SSL_ENABLED}&readPreference=secondary&minPoolSize=\${MONGO_MIN_POOL_SIZE}&maxPoolSize=\${MONGO_MAX_POOL_SIZE}&maxIdleTimeMS=\${MONGO_MAX_IDLE_TIMEOUT_MS}&connectTimeoutMS=\${MONGO_CONNECTION_TIMEOUT_MS}&socketTimeoutMS=\${MONGO_SOCKET_TIMEOUT_MS}&serverSelectionTimeoutMS=\${MONGO_SERVER_SELECTION_TIMEOUT_MS}&waitQueueTimeoutMS=\${MONGO_WAITING_QUEUE_MS}&heartbeatFrequencyMS=\${MONGO_HEARTBEAT_FREQUENCY_MS}
#spring.data.mongodb.database=ecommerce

#Ecommerce mongo database configurations
mongodb.uri=mongodb://\${MONGO_USERNAME}:\${MONGO_PASSWORD}@\${MONGO_HOST}:\${MONGO_PORT}/?ssl=\${MONGO_SSL_ENABLED}&readPreference=secondary&minPoolSize=\${MONGO_MIN_POOL_SIZE}&maxPoolSize=\${MONGO_MAX_POOL_SIZE}&maxIdleTimeMS=\${MONGO_MAX_IDLE_TIMEOUT_MS}&connectTimeoutMS=\${MONGO_CONNECTION_TIMEOUT_MS}&socketTimeoutMS=\${MONGO_SOCKET_TIMEOUT_MS}&serverSelectionTimeoutMS=\${MONGO_SERVER_SELECTION_TIMEOUT_MS}&waitQueueTimeoutMS=\${MONGO_WAITING_QUEUE_MS}&heartbeatFrequencyMS=\${MONGO_HEARTBEAT_FREQUENCY_MS}
mongodb.ecommerce.database=ecommerce
mongodb.ecommerce_history.database=ecommerce-history


deadLetter.queueMapping=\${SEARCH_DEAD_LETTER_QUEUE_MAPPING}
#PDV configuration
confidentialDataManager.personalDataVaultEmail.apiKey=\${PERSONAL_DATA_VAULT_API_KEY_EMAIL}
confidentialDataManager.personalDataVaultFiscalCode.apiKey=\${PERSONAL_DATA_VAULT_API_KEY_FISCAL_CODE}
confidentialDataManager.personalDataVault.apiBasePath=\${PERSONAL_DATA_VAULT_API_BASE_PATH}

# feature flags
search.pm.in.ecommerce.history.enabled=\${SEARCH_PM_IN_ECOMMERCE_HISTORY_ENABLED}
search.pm.transactionIdRangeMax=\${SEARCH_PM_TRANSACTION_ID_RANGE_MAX}

# NPG key config
npg.uri=\${NPG_URI}
npg.readTimeout=\${NPG_READ_TIMEOUT}
npg.connectionTimeout=\${NPG_CONNECTION_TIMEOUT}
npg.client.apiKey=\${NPG_API_KEY}
npg.authorization.cards.keys=\${NPG_CARDS_PSP_KEYS}
npg.authorization.cards.pspList=\${NPG_CARDS_PSP_LIST}
npg.authorization.paypal.keys=\${NPG_PAYPAL_PSP_KEYS}
npg.authorization.paypal.pspList=\${NPG_PAYPAL_PSP_LIST}
npg.authorization.bancomatpay.keys=\${NPG_BANCOMATPAY_PSP_KEYS}
npg.authorization.bancomatpay.pspList=\${NPG_BANCOMATPAY_PSP_LIST}
npg.authorization.mybank.keys=\${NPG_MYBANK_PSP_KEYS}
npg.authorization.mybank.pspList=\${NPG_MYBANK_PSP_LIST}
npg.authorization.satispay.keys=\${NPG_SATISPAY_PSP_KEYS}
npg.authorization.satispay.pspList=\${NPG_SATISPAY_PSP_LIST}
npg.authorization.applepay.keys=\${NPG_APPLEPAY_PSP_KEYS}
npg.authorization.applepay.pspList=\${NPG_APPLEPAY_PSP_LIST}
npg.authorization.googlepay.keys=\${NPG_GOOGLE_PAY_PSP_KEYS}
npg.authorization.googlepay.pspList=\${NPG_GOOGLE_PAY_PSP_LIST}

security.apiKey.primary=\${SECURITY_API_KEY_PRIMARY}
security.apiKey.secondary=\${SECURITY_API_KEY_SECONDARY}
security.apiKey.securedPaths=\${SECURITY_API_KEY_SECURED_PATHS}


quarkus.mongodb.connection-string=mongodb://localhost:27017
quarkus.mongodb.database=ecommerce
quarkus.mongodb.ecommerce-history.database=ecommerce_history


quarkus.openapi.generator.input-base-dir=/api-spec/v1
quarkus.openapi.generator.spec=openapi.yaml
quarkus.openapi.generator.base-package=it.pagopa.generated.ecommerce.helpdesk
quarkus.openapi.generator.reactive=true
quarkus.smallrye-openapi.enable=true