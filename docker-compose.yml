version: '3.8'

services:
  pagopa-ecommerce-helpdesk-service:
    container_name: pagopa-ecommerce-helpdesk-service
    build:
      dockerfile: Dockerfile
      context: .
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    networks:
      - pagopa-ecommerce-net
    depends_on:
      - mongo
  oracle:
    container_name: pagopa-ecommerce-helpdesk-oracle
    build: ./docker/oracleDB/liquibase
    profiles:
      - arm64
    image: pagopadcommonacr.azurecr.io/dboracle-ee-12.2.0.1-slim
    ports:
      - 1521:1521
      - 5500:5500
    expose:
      - '1521'
      - '5500'
    extra_hosts:
      - "spid-testenv2:127.0.0.1"
      - "spid-testenv2-2:127.0.0.1"
      - "pagopa-dev:127.0.0.1"
      - "spid-validator:127.0.0.1"
  oracle-pm:
    container_name: pagopa-ecommerce-helpdesk-oracle-pm
    build:
      context: ./docker/oracleDB/liquibase/
      dockerfile: Dockerfile.PM
    ports:
      - 1523:1521
    expose:
      - '1523'
    networks:
      - pagopa-ecommerce-net
  mongo:
    container_name: pagopa-ecommerce-helpdesk-mongo
    image: mongo@sha256:3984cf5a234e525253619060fcbff12449db0597d62a6d4e18991a18f2365c36
    env_file: docker/mongoDB/conf/mongodb.env
    ports:
      - "27017:27017"
    networks:
      - pagopa-ecommerce-net
    healthcheck:
      test: echo "db.stats().ok" | mongo --quiet
      interval: 10s
    volumes:
      - ./docker/mongoDB/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    container_name: pagopa-ecommerce-helpdesk-express
    image: mongo-express@sha256:1b23d7976f0210dbec74045c209e52fbb26d29b2e873d6c6fa3d3f0ae32c2a64
    env_file: docker/mongoDB/conf/mongo-express.env
    ports:
      - "8081:8081"
    networks:
      - pagopa-ecommerce-net
    depends_on:
      - mongo

  pagopa-pdv-mock:
    container_name: pagopa-pdv-mock-helpdesk
    build:
      context: docker/pagopa-personal-data-vault-tokenizer/
      dockerfile: Dockerfile.pdv
    ports:
      - "8092:8080"
    networks:
      - pagopa-ecommerce-net

  pagopa-npg-mock:
    container_name: pagopa-NPG-mock-helpdesk
    build:
      context: docker/npg-mock/
      dockerfile: Dockerfile.npg-mock
    ports:
      - "8093:3000"
    volumes:
      - type: bind
        source: ./docker/npg-mock
        target: /config
        read_only: true
    networks:
      - pagopa-ecommerce-net


networks:
  pagopa-ecommerce-net:
    name: pagopa-ecommerce-net
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450


