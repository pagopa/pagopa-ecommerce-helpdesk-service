version: '3.8'

services:
  pagopa-ecommerce-helpdesk-service:
    container_name: pagopa-ecommerce-helpdesk-service
    build:
      dockerfile: Dockerfile
      context: .
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    networks:
      - pagopa-ecommerce-net
    depends_on:
      - mongo
  oracle:
    container_name: pagopa-ecommerce-helpdesk-oracle
    build: ./docker/oracleDB/liquibase
    profiles:
      - arm64
    image: pagopadcommonacr.azurecr.io/dboracle-ee-12.2.0.1-slim
    ports:
      - 1521:1521
      - 5500:5500
    expose:
      - '1521'
      - '5500'
    extra_hosts:
      - "spid-testenv2:127.0.0.1"
      - "spid-testenv2-2:127.0.0.1"
      - "pagopa-dev:127.0.0.1"
      - "spid-validator:127.0.0.1"
  mongo:
    container_name: pagopa-ecommerce-helpdesk-mongo
    image: mongo
    env_file: docker/mongoDB/conf/mongodb.env
    ports:
      - "27017:27017"
    networks:
      - pagopa-ecommerce-net
    healthcheck:
      test: echo "db.stats().ok" | mongo --quiet
      interval: 10s
    volumes:
      - ./docker/mongoDB/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    container_name: pagopa-ecommerce-helpdesk-express
    image: mongo-express
    env_file: docker/mongoDB/conf/mongo-express.env
    ports:
      - "8081:8081"
    networks:
      - pagopa-ecommerce-net
    depends_on:
      - mongo


networks:
  pagopa-ecommerce-net:
    name: pagopa-ecommerce-net
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450


